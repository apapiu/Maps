{
    "contents" : "library(leaflet)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(htmlwidgets)\n\n#installing rgdal was hardd\ninstall.packages(\"tigris\")   \ninstall.packages('rgeos', type=\"source\")\ninstall.packages('rgdal', type=\"source\")\ninstall.packages('rgdal', type = \"source\", configure.args=c('--with-proj-include=/usr/local/include','--with-proj-lib=/usr/local/lib'))\n\nlibrary(tigris)\nlibrary(acs)\nlibrary(stringr) # to pad fips codes\nlibrary(rgdal)\nlibrary(dplyr)\n\n\nsaveWidget(widget = your.map, file=\"your_map.html\", selfcontained = FALSE)\n\n\n\ncounties <- c(5, 47, 61, 81, 85)\n\n#gives the spatial thing using tigris\ntracts <- tracts(state = 'NY', county = c(5, 47, 61, 81), cb=TRUE)\n\n#acs data extraction:\ngeo<-geo.make(state=c(\"NY\"),\n              county=c(5, 47, 61, 81), tract=\"*\", check = TRUE)\n\nincome<-acs.fetch(endyear = 2012, span = 5, geography = geo,\n                  table.number = \"B19001\", col.names = \"pretty\")\n\nincome_df <- data.frame(paste0(str_pad(income@geography$state, 2, \"left\", pad=\"0\"), \n                               str_pad(income@geography$county, 3, \"left\", pad=\"0\"), \n                               str_pad(income@geography$tract, 6, \"left\", pad=\"0\")), \n                        income@estimate[,c(\"Household Income: Total:\",\n                                           \"Household Income: $200,000 or more\")], \n                        stringsAsFactors = FALSE)\ntemp <- income@estimate\n\nincome_df <- select(income_df, 1:3)\nrownames(income_df)<-1:nrow(income_df)\nnames(income_df)<-c(\"GEOID\", \"total\", \"over_200\")\nincome_df$percent <- 100*(income_df$over_200/income_df$total)\n\n#merging the data in the map and the data in the mapdata:\n\nincome_merged<- geo_join(tracts, income_df, \"GEOID\", \"GEOID\")\n# there are some tracts with no land that we should exclude\nincome_merged <- income_merged[income_merged$ALAND>0,]\n\npopup <- paste0(\"GEOID: \", income_merged$GEOID, \"<br>\", \"Percent of Households above $200k: \", round(income_merged$percent,2))\n\npal <- colorNumeric(\n    palette = \"YlGnBu\",\n    domain = income_merged$percent\n)\n\nm <- leaflet() %>%\n     addTiles() %>%\n     setView(lng = -73.985428, lat = 40.748817, zoom = 13) %>%\n     addProviderTiles(\"CartoDB.Positron\") %>%\n     addPolygons(data = income_merged, \n                 fillColor = ~pal(percent), \n                 color = \"#b2aeae\", # you need to use hex colors\n                 fillOpacity = 0.45, \n                 weight = 1, \n                 smoothFactor = 0.4,\n                 popup = popup)\nm\n\n#providers : CartoDB.Positron, Esri.WorldGrayCanvas, CartoDB.DarkMatter.\n# MapBox, Hydda.Base\n\n\n#________________________________________________________\n\n# api.key.install(\"my_key_here\") You can get your own API key from the Census Bureau\n\n\n###TRACTS\n\nstltracts <- tracts(\"MO\", c(\"St. Louis City\"))\n\n\n###Getting the Data thru ACS:\napi.key.install(key = \"6dd74c58e801a0aec87d86549cc3869cdf9946f5\")\n\n#set the geography - in this case stl county and city\n#make sure to use geo.lookup and check = TRUE\ngeo = geo.make(state = c(\"MO\"), county = c(510), tract = \"*\", check =TRUE)\n\n#fetch the ACS, col.names = \"pretty\" gives more understandable cols\nincome <- acs.fetch(endyear = 2012, geography = geo, table.number = \"B19001\",\n                    col.names = \"pretty\")\n\n#to actually get the dataframe you're after:\ntemp <- income@estimate\n\n#NOW tracts has GEOID and you need that in the the acsfetch\n#GEOID = state code + county code + tract code\n\n#_________________\n####FLOW:\n#-----------------\nGEOID <- income_df$GEOID\n\ndata <- data.frame(GEOID, statis = rnorm(length(GEOID)))\n\n#merge the data - this is all you need for leaflet!!!\ndata.merged <- geo_join(spatial_data = tracts, data_frame = data, \n                        \"GEOID\", \"GEOID\")\n\n\npal <- colorQuantile(\"Blues\", NULL, n = 6)\n\n\n#### DEFAULT options with merge and stat:\nleaflet() %>%\n    addProviderTiles(\"CartoDB.Positron\") %>%\n    addPolygons(data = merge, \n                fillColor = ~pal(stat), fillOpacity = 1, \n                color = \"white\", weight = 2,\n                popup = paste0(merge$stat)) %>%\n    addLegend(pal = pal, \n              values = merge$stat, \n              position = \"bottomright\",\n              opacity = .7,\n              title = \"blah\")\n\n\n                ",
    "created" : 1455245639261.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "825908286",
    "id" : "9315AFC4",
    "lastKnownWriteTime" : 1455501726,
    "path" : "~/Documents/R/Maps_dataincu/leaflet.R",
    "project_path" : "leaflet.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}