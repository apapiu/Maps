p <- plot_ly(economics, x = date, y = uempmed, filename="r-docs/knitr-example")
library(ggplot2)
library(plotly)
plot_ly(economics, x = date, y = uempmed, filename="r-docs/knitr-example")
economics
plot_ly(economics, x = date, y = uempmed)
ggplotly(qplot(1:10))
ggplotly(qplot(x = 1:10, y = rnorm(10)))
ggplotly(qplot(x = rnorm(10), y = rnorm(10)))
ggplotly(qplot(x = rnorm(100), y = rnorm(100)))
?plot_ly
plot_ly(economics, x = date, y = uempmed)
?plotly
?plotl_ly
?plot_ly
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples')
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples')
plot_ly(df, z = total.exports, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(df, z = total.exports, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples'
geo = g)
locationmode = 'USA-states', color = total.exports, colors = 'Purples',
plot_ly(df, z = total.exports, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
View(df)
load("/Users/alexpapiu/Documents/R/ACS Census EDA/census.Rd")
library(dplyr)
ysingles <- filter(cens, AGEP >= 18, AGEP <= 35, MAR %in% c(2,3,4,5))
ysingles.college <- filter(ysingles, SCHL %in% 20:24)
singbysex <- table(ysingles$SEX, ysingles$ST)
singbysex <- data.frame(table(ysingles$SEX, ysingles$ST))
View(singbysex)
singbysex <- table(ysingles$SEX, ysingles$ST)
singbysex
ratios <- singbysex[1,]/singbysex[2,] #ratios
View(df)
singles.state <- cbind(df$code, ratios)
?locationmode
dim(ratios)
length(ratios)
unique(ysingles$ST)
singles.state <- cbind(df$code, ratios[-c(11,)])
singles.state <- cbind(df$code, ratios[-11]) #no washingoton DC
View(singles.state)
singles.state <- data.frame(code = df$code, ratios = ratios[-11]) #no washingoton DC
View(singles.state)
plot_ly(singles.state, z = ratios , locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', geo = g)
plot_ly(singles.state, z = ratios , locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples', geo = g)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(singles.state, z = ratios , locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
plot_ly(singles.state, z = ratios , locations = code, type = 'choropleth',
locationmode = 'USA-states', color = code, colors = 'Purples', geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women <br> (Hover for breakdown)',geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
View(singles.state)
df$code
singbysex.col <- table(ysingles.college$SEX, ysingles.state$ST)
ratios.col <- singbysex.col[1,]/singbysex.col[2,] #ratios
singbysex.col <- table(ysingles.college$SEX, ysingles.college$ST)
ratios.col <- singbysex.col[1,]/singbysex.col[2,] #ratios
singles.state <- data.frame(code = df$code, ratios = ratios[-11],
ratios.col = ratios.col[-11]) #no washingoton DC
plot_ly(singles.state, z = ratios.col, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios.col, colors = 'Purples',
colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women <br> (Hover for breakdown)',geo = g)
l <- list(color = toRGB("white"), width = 2)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
marker = list(line = l), colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women <br> (Hover for breakdown)',geo = g)
singles.state$ratios*100
floor(singles.state$ratios*100)
singles.state$men <- floor(singles.state$ratios*100)
df1$hover1 <- with(df, paste(state) '<br>', men "men for every 100 women" ) )
df1$hover1 <- with(df, paste(state, '<br>', men "men for every 100 women" ) )
df1$hover1 <- with(df, paste(state, '<br>', men, "men for every 100 women" ) )
singles.state$men <- floor(singles.state$ratios*100)
df1$hover1 <- with(df1, paste(state, '<br>', men, "men for every 100 women" ) )
?with
singles.state$hover1 <- with(singles.state,
paste(state, '<br>', men, "men for every 100 women" ) )
singles.state$hover1 <- with(singles.state,
paste(men, "men for every 100 women" ) )
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1,
marker = list(line = l), colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women <br> (Hover for breakdown)',geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women <br> (Hover for breakdown)',geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
plot_ly(singles.state, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
plot_ly(df, z = total.exports, text = hover, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = total.exports, colors = 'Purples', colorbar = list(title = "Millions USD")) %>%
layout(title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)', geo = g)
singles.state$state <- df$state
singles.state$hover1 <- with(singles.state,
paste(state, "<br>", men, "men for every 100 women" ) )
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
singles.state$hover1 <- with(singles.state,
paste(state, "<br>", men, " single men for every 100 single women" ) )
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
singles.state$mencol <- floor(singles.state$ratios.col*100)
singles.state$hover2 <- with(singles.state,
paste(state, "<br>", mencol, " single men for every 100 single women" ) )
plot_ly(singles.state, z = ratios.col, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios.col, colors = 'Purples',
text = hover2, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Colege Educated Single Men to Women <br> (Hover for breakdown)',geo = g)
?echo
1 <- ggplot(cens, aes(x = AGEP, fill = as.factor(SEX))) +
geom_histogram(alpha = 0.5, binwidth = 1, position = 'identity') +
xlab("Age") + ylab("Count") +
scale_fill_discrete(name = "Sex", labels = c("Female", "Male"))
ggplotly(g1)
g1 <- ggplot(cens, aes(x = AGEP, fill = as.factor(SEX))) +
geom_histogram(alpha = 0.5, binwidth = 1, position = 'identity') +
xlab("Age") + ylab("Count") +
scale_fill_discrete(name = "Sex", labels = c("Female", "Male"))
ggplotly(g1)
g1 <- ggplot(cens.over15, aes(x = AGEP, ..count.., fill = as.factor(MAR))) +
stat_density(position = 'stack') +
xlab("Age") + ylab("Count") +
scale_fill_discrete(name = "Marital Status",
labels = c("Married", "Widowed", "Divorced",
"Separated", "Never Married"))
singles.state$hover1 <- with(singles.state,
paste(state, "<br>", men, " single men per 100 single women" ) )
plot_ly(singles.state, z = ratios, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = ratios, colors = 'Purples',
text = hover1, colorbar = list(title = "Ratio")) %>%
layout(title = 'Ratio of Single Men to Women Aged 18 to 35
<br> (Hover for breakdown)', geo = g)
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
library(rMaps)
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
library(leaflet)
topoData <- readLines("json/us-10m.json") %>% paste(collapse = "\n")
install.packages("newtworkD3")
install.packages("newtworkD3")
2+@
2+2
R.version()
R.Version()
install.packages("newtworkD3")
install.packages("newtworkD3")
library(ggplot2)
library(plotly)
devtools::install_github('christophergandrud/d3Network')
library(d3Network)
Source <- c("A", "A", "A", "A", "B", "B", "C", "C", "D")
Target <- c("B", "C", "D", "J", "E", "F", "G", "H", "I")
NetworkData <- data.frame(Source, Target)
d3SimpleNetwork(NetworkData, width = 400, height = 250)
simpleNetwork(networkData)
d3simpleNetwork(NetworkData)
d3simplenetwork(NetworkData)
