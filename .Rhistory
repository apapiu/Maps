filter(party == "Republican") %>%
group_by(state_abbreviation, county) %>%
summarize(candidate = candidate[which.max(fraction_votes)],
Vote = max(fraction_votes))
head(votes)
demographics <- read.csv("county_facts.csv", stringsAsFactors = FALSE)
#INC110213 - median household income
#RHI125214 - white alone
#EDU685213 - bachelors degree or higher
#POP060210 - population per square mile
#RHI725214 - hispanic or latino
#RHI825214 - white non-hispanic
demographics %<>%
filter(state_abbreviation %in% c("IA", "NV", "SC")) %>%
select(state_abbreviation = state_abbreviation, county = area_name, income = INC110213, hispanic = RHI725214,
white= RHI825214, college = EDU685213, density = POP060210)
demographics$county <- gsub(" County", "", demographics$county)
Now we join the vote and demographic information based on county, making sure we don't double count counties that have the same name but are in different states.
```{r}
votes <- inner_join(votes, demographics, by = c("state_abbreviation","county"))
str(votes)
```
## 2. Plots and Exploration:
Now we are finally in a position to actually do some analysis:
```{r}
votes %>%
group_by(candidate) %>%
summarize(mean(income), mean(white), mean(college), mean(density), mean(hispanic))
```
The table above let's us see what the "average" county looks like in terms of voting preferences. Let's also look a the spread of the counties before jumping to conclusions:
ggplotly(qplot(x =  income, y = college, data = votes,
color = candidate, size = Vote) +
ggtitle("Counties by Winner, Education and Income"))
ggplotly(qplot(x =  white, y = density, data = votes,
color = candidate, size = Vote))
candidate = "Marco Rubio"
trump <- primary %>%
filter(candidate == "Marco Rubio")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
trump <- primary %>%
filter(candidate == "Donald Trump")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
trump <- primary %>%
filter(candidate == "Ted Cruz")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
trump <- primary %>%
filter(candidate == "Donald Trump")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
candidate = "Marco Rubio"
trump <- primary %>%
filter(candidate == "Donald Trump")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
str(votes)
head(votes)
?head()
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
trump <- primary %>%
filter(winner == "Donald Trump")
primary <- read.csv("primary_results.csv", stringsAsFactors = FALSE)
votes <- primary %>%  #get the winners and the fraction of votes the won
filter(party == "Republican") %>%
group_by(state_abbreviation, county) %>%
summarize(winner = candidate[which.max(fraction_votes)],
Vote = max(fraction_votes))
View(votes)
demographics <- read.csv("county_facts.csv", stringsAsFactors = FALSE)
demographics %<>%
filter(state_abbreviation %in% c("IA", "NV", "SC")) %>%
select(state_abbreviation = state_abbreviation, county = area_name, income = INC110213, hispanic = RHI725214,
white= RHI825214, college = EDU685213, density = POP060210)
demographics$county <- gsub(" County", "", demographics$county)
votes <- inner_join(votes, demographics, by = c("state_abbreviation","county"))
View(votes)
votes %>%
group_by(winner) %>%
summarize(mean(income), mean(white), mean(college), mean(density), mean(hispanic))
ggplotly(qplot(x =  income, y = college, data = votes,
color = winner, size = Vote) +
ggtitle("Counties by Winner, Education and Income"))
ggplotly(qplot(x =  white, y = density, data = votes,
color = winner, size = Vote))
winner = "Marco Rubio"
trump <- primary %>%
filter(winner == "Donald Trump")
datatable(head(votes))
library(DT)
datatable(head(votes))
?datatable
datatable(votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic)))
datatable(votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic))))
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic),1))) %>%     datatable(rownames = c("Winner", "Income", "White"))
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic),1)) %>%     datatable(rownames = c("Winner", "Income", "White"))
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic),1)) %>%     datatable(colnames = c("Winner", "Income", "White"))
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic),1)) %>%     datatable(colnames = c(" ",  "Winner", "Income", "White"))
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college)), round(mean(density)), round(mean(hispanic),1)) %>%     datatable()
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college),1),round(mean(density)),round(mean(hispanic),1))%>%     datatable()
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college),1),round(mean(density)),round(mean(hispanic),1))%>%      datatable( colnames = c(" ",  "Winner", "Income", "White (non-Hispanic)", "Colege",                           "Density (pop/sq m)", "Hispanic"))
---
title: "Trends in the Republican Primaries"
output:
html_document:
toc: true
code_folding: hide
---
<style type="text/css">
body{ /* Normal  */
font-size:17px;
</style>
## 1. Packages, Demographics and Data Munging:
I will give a brief summary of the data cleaning process:
- first we create a data frame `votes` that gives the Republican winner by county
- second we extract some demographic features from the `county_facts.csv` file
- third we merge the demographic data with the `votes` dataframe by county and by state.
```{r, message = FALSE, warning = FALSE}
library(dplyr)
library(ggplot2)
library(plotly)
library(grid)
library(gridExtra)
library(DT)
primary <- read.csv("primary_results.csv", stringsAsFactors = FALSE)
votes <- primary %>%  #get the winners and the fraction of votes the won
filter(party == "Republican") %>%
group_by(state_abbreviation, county) %>%
summarize(winner = candidate[which.max(fraction_votes)],
Vote = max(fraction_votes))
demographics <- read.csv("county_facts.csv", stringsAsFactors = FALSE)
demographics %<>%
filter(state_abbreviation %in% c("IA", "NV", "SC")) %>%
select(state_abbreviation = state_abbreviation, county = area_name, income = INC110213, hispanic = RHI725214,
white= RHI825214, college = EDU685213, density = POP060210)
demographics$county <- gsub(" County", "", demographics$county)
votes <- inner_join(votes, demographics, by = c("state_abbreviation","county"))
datatable(head(votes))
```
## 2. Plots and Exploration:
Now we are finally in a position to actually do some analysis:
```{r}
votes %>%
group_by(winner) %>%
summarize(round(mean(income)), round(mean(white)),
round(mean(college),1),round(mean(density)),round(mean(hispanic),1))%>%      datatable( colnames = c(" ",  "Winner", "Income", "White (non-Hispanic)", "Colege",                           "Density (pop/sq m)", "Hispanic"))
```
The table above let's us see what the "average" county looks like in terms of voting preferences. Let's also look a the spread of the counties before jumping to conclusions:
```{r}
ggplotly(qplot(x =  income, y = college, data = votes,
color = winner, size = Vote) +
ggtitle("Counties by Winner, Education and Income"))
ggplotly(qplot(x =  white, y = density, data = votes,
color = winner, size = Vote))
```
```{r}
winner = "Marco Rubio"
trump <- primary %>%
filter(candidate == "Donald Trump")
trump <- inner_join( trump, demographics, by = c("state_abbreviation","county"))
trump$income <- trump$income/1000
trump$fraction_votes <- trump$fraction_votes *100 #normalize a bit
g1 <- qplot(x = income, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g2 <- qplot(x = college, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g3 <- qplot(x = white, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
g4 <- qplot(x = hispanic, y = fraction_votes, data = trump) +
geom_smooth(method='lm',formula=y~x)
grid.arrange(g1, g2, g3, g4, nrow =2, ncol = 2)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
```
## Conclusion:
Rubio is most succesful in counties that are:
- wealthy
-
-
Cruz is most succesful
-
Trump is most sucessful in counties that have:
- low median income
- low college attainment
- large hispanic and low white non-hispanic population (?!?!?!!?)
The main takeway however is that based on the data, Donald Trump seems to have a much broader appeal than his two main rivals, at least among Republican primary voters. Whether that would translate into a larger appeal among the general population is hard to gauge.
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
datatable(summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump)))
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
temp <- summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump))
temp$coefficients
temp$r.squared
dataframe(temp$coefficients)
datatable(temp$coefficients)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump)
summary(lm(fraction_votes ~ college+white+hispanic+income+density, data = trump)
?datatable
datatable(head(votes), class = 'compact')
datatable(head(votes), class = c('compact','display'))
datatable(head(votes), class = 'display')
datatable(votes, class = 'display')
datatable(votes, class = 'compact')
?code_folding
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote)
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote, xlab = c(90, 100), ylab = c(0,10))
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote, xlim = c(90, 100), ylim = c(0,10))
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote, xlim = c(92, 98), ylim = c(0,5))
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote, xlim = c(92, 98), ylim = c(1,5))
qplot(x =  white, y = hispanic, data = votes,
color = winner, size = Vote, xlim = c(92, 98), ylim = c(1,5)) +
ggtitle("Where the White People Are")
library(GGally)
?ggpairs
ggpairs(data = votes[5,6,7,8])
ggpairs(data = votes[,c(5,6,7,8)])
ggpairs(data = votes[,c(5,6,7,8)], color = winner)
ggpairs(data = votes[,c(5,6,7,8)], colour = "winner")
votes$winner <- as.factor(votes$winner)
ggpairs(data = votes[,c(5,6,7,8)], colour = "winner")
ggpairs(iris, colour='Species', alpha=0.4)
ggpairs(iris, colour='Species', alpha=0.4)
ggpairs(data = votes[,c(2,5,6,7,8)], colour = "winner")
str(votes)
ggpairs(data = votes[,c(2,5,6)], colour = "winner")
ggpairs(iris, colour='Species', alpha=0.4)
ggpairs(data = votes[,c(2,5,6)], colour = "winner")
temp <- votes[, c(2, 5, 6)]
View(temp)
ggpairs(data = votes[,c(3, 5, 6, 7)], colour = "winner")
ggpairs(data = votes[,c(3, 5, 6, 7)], colour = "winner")
ggplotly(ggpairs(data = votes[,c(3, 5, 6, 7)], colour = "winner"))
ggpairs(data = votes[,c(3, 5, 6, 7, 8, 9)], colour = "winner")
View(primary)
primary %>%
filter(party = "Republican") %>%
group_by(state) %>%
summarize(sum(votes))
primary %>%
filter(party == "Republican") %>%
group_by(state) %>%
summarize(sum(votes))
primary <- read.csv("PrimaryResults.csv", stringsAsFactors = FALSE)
?grid.arrange
```{r, message= FALSE, warning= FALSE, out.width = "800px"" }
ggplotly(qplot(x =  white, y = college, data = votes,
color = winner, size = Vote) +
ggtitle("Counties by Winner, Percentage of Whites and Non-Hispanic Whites"))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(vote))
View(primary)
primary <- read.csv("primary_results.csv", stringsAsFactors = FALSE)
View(primary)
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(vote))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(Vote))
names(primary)
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(arrange(sum(votes))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(arrange(sum(votes)))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes)) %>%
arrange(votes)
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
arrange(votes) %>%
summarize(sum(votes))
?arrange
ggplot(data = primary, mapping = aes(x = votes)) +
geom_bar()
ggplot(data = primary, mapping = aes(x = votes, y = candidate)) +
geom_bar()
ggplot(data = primary, mapping = aes(x = votes)) +
geom_bar(candidate)
ggplot(data = primary, aes(x = votes, y = candidate)) +
geom_bar(candidate)
names
names(primary)
ggplot(data = primary, aes(x = votes, y = candidate)) +
geom_bar()
ggplot(data = primary, aes(x = votes, y = candidate)) +
geom_bar(stat = "identity")
ggplot(data = primary, aes(x = candidate, y = votes)) +
geom_bar(stat = "identity")
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes))
ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity")
ggplotly(ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity"))
?geom_bar
ggplotly(ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "count"))
ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity") +
scale_color_brewer("RdBu")
ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
ggplot(data = primary, aes(x = candidate, y = votes, fill = county)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
?arrange
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
arrange(summarize(sum(votes)))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes)) %>%
arrange(sum(votes))
ggplot(data = primary, aes(x = candidate, y = votes, fill = party)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
ggplot(data = primary, aes(x = state, y = votes, fill = party)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(sum(votes))
?arrange
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(votes)
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(dec(votes))
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(desc(votes))
temp <- primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(desc(votes))
plot(temp)
plot(temp)
temp <- primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(desc(votes))
temp
ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
primary  %>%
filter(party == "Republican")  %>%
group_by(candidate) %>%
summarize(votes = sum(votes)) %>%
arrange(desc(votes)) %>%
filter(votes > 10000)
ggplot(data = primary, aes(x = candidate, y = votes, color = state)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
ggplot(data = primary, aes(x = candidate, y = votes, fill = state)) +
geom_bar(stat = "identity") + scale_color_brewer("RdBu")
primary %>%
group_by(state) %>%
summarize(n(county))
primary %>%
group_by(state) %>%
tally()
primary %>%
group_by(state, county) %>%
tally()
primary %>%
group_by(state) %>%
tally(unique(couty))
primary %>%
group_by(state) %>%
tally(unique(county))
primary %>%
group_by(state) %>%
distinct(county)
primary %>%
group_by(state) %>%
n_distinct(county)
primary %>%
group_by(state) %>%
summarize(n_distinct(county))
primary %>%
group_by(state, candidate) %>%
summarize(n_distinct(county))
rubio <- primary %>%
filter(candidate == "Marco Rubio")
rubio <- inner_join( rubio, demographics, by = c("state_abbreviation","county"))
rubio$income <- rubio$income/1000
rubio$fraction_votes <- rubio$fraction_votes *100 #normalize a bit
?datatable
library(DT)
library(DT)
?datatable
